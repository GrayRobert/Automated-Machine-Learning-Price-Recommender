{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/custom/TrainModel.vue?vue&type=template&id=82befd56&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/custom/TrainModel.vue","mtime":1543353930769},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-card\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"form\",\n              { attrs: { enctype: \"multipart/form-data\", novalidate: \"\" } },\n              [\n                _c(\"h2\", [_vm._v(\"Price Recommender Training\")]),\n                _vm.isSuccess\n                  ? _c(\"h3\", [\n                      _vm._v(\n                        \"Uploaded \" +\n                          _vm._s(_vm.uploadedFiles.length) +\n                          \" file(s) successfully.\"\n                      )\n                    ])\n                  : _vm._e(),\n                _c(\"div\", { staticClass: \"dropbox\" }, [\n                  _c(\"input\", {\n                    staticClass: \"input-file\",\n                    attrs: {\n                      type: \"file\",\n                      name: _vm.uploadFieldName,\n                      disabled: _vm.isSaving,\n                      accept: \"text/csv\"\n                    },\n                    on: {\n                      change: function($event) {\n                        _vm.filesChange($event.target.name, $event.target.files)\n                        _vm.fileCount = $event.target.files.length\n                      }\n                    }\n                  }),\n                  _vm.isInitial\n                    ? _c(\"div\", [\n                        _c(\"div\", { staticClass: \"arrow-down\" }),\n                        _c(\"p\", [\n                          _vm._v(\"Drop your CSV file here \"),\n                          _c(\"br\"),\n                          _vm._v(\" or click to browse\")\n                        ])\n                      ])\n                    : _vm._e(),\n                  _vm.isSaving\n                    ? _c(\"p\", [\n                        _vm._v(\n                          \"\\n                Uploading \" +\n                            _vm._s(_vm.fileCount) +\n                            \" files...\\n                \"\n                        )\n                      ])\n                    : _vm._e(),\n                  _vm.isSuccess\n                    ? _c(\"div\", [\n                        _c(\n                          \"ul\",\n                          { staticClass: \"list-unstyled\" },\n                          _vm._l(_vm.uploadedFiles, function(file) {\n                            return _c(\"li\", [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(file) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          })\n                        )\n                      ])\n                    : _vm._e(),\n                  _vm.isFailed\n                    ? _c(\"div\", [\n                        _c(\"h2\", [_vm._v(\"Uploaded failed.\")]),\n                        _c(\"p\", [\n                          _c(\n                            \"a\",\n                            {\n                              attrs: { href: \"javascript:void(0)\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.reset()\n                                }\n                              }\n                            },\n                            [_vm._v(\"Try again\")]\n                          )\n                        ]),\n                        _c(\"pre\", [_vm._v(_vm._s(_vm.uploadError))])\n                      ])\n                    : _vm._e()\n                ])\n              ]\n            )\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { attrs: { slot: \"footer\" }, slot: \"footer\" },\n        [\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                { staticClass: \"col-sm-2\" },\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { type: \"submit\", size: \"sm\", variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          _vm.preProcessModal = true\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fa fa-dot-circle-o\" }),\n                      _vm._v(\" Train Model\")\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"b-col\",\n                { staticClass: \"col-sm-10\" },\n                [\n                  _vm.trainingInProgress\n                    ? _c(\n                        \"b-row\",\n                        [\n                          _c(\"b-col\", { staticClass: \"col-sm-2\" }, [\n                            _c(\n                              \"div\",\n                              [\n                                _c(\"atom-spinner\", {\n                                  attrs: {\n                                    \"animation-duration\": 1000,\n                                    size: 30,\n                                    color: \"#20a8d8\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ]),\n                          _c(\"b-col\", { staticClass: \"col-sm-10\" }, [\n                            _c(\"span\", { staticClass: \"training-text\" }, [\n                              _vm._v(\"Training in progress...\")\n                            ])\n                          ])\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _c(\"div\", { attrs: { id: \"accuracy\" } }, [\n                    _vm.accuracy !== null\n                      ? _c(\"span\", [\n                          _vm._v(\"Accuracy: \" + _vm._s(_vm.accuracy.R2))\n                        ])\n                      : _vm._e()\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"b-modal\",\n        {\n          attrs: {\n            title: \"Model Training Options\",\n            size: \"lg\",\n            \"ok-title\": \"Train\"\n          },\n          on: {\n            ok: function($event) {\n              _vm.preProcessModal = false\n            }\n          },\n          model: {\n            value: _vm.preProcessModal,\n            callback: function($$v) {\n              _vm.preProcessModal = $$v\n            },\n            expression: \"preProcessModal\"\n          }\n        },\n        [\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Select categroical fields to encode\",\n                        \"label-for\": \"encodeCatFields\",\n                        \"label-cols\": 3,\n                        horizontal: true\n                      }\n                    },\n                    [\n                      _c(\"b-form-select\", {\n                        attrs: {\n                          id: \"encodeCatFields\",\n                          plain: true,\n                          multiple: true,\n                          options: _vm.fieldOptions\n                        },\n                        model: {\n                          value: _vm.encodeCatFields,\n                          callback: function($$v) {\n                            _vm.encodeCatFields = $$v\n                          },\n                          expression: \"encodeCatFields\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Select date fields to encode\",\n                        \"label-for\": \"encodeDateFields\",\n                        \"label-cols\": 3,\n                        horizontal: true\n                      }\n                    },\n                    [\n                      _c(\"b-form-select\", {\n                        attrs: {\n                          id: \"encodeDateFields\",\n                          plain: true,\n                          multiple: true,\n                          options: _vm.fieldOptions\n                        },\n                        model: {\n                          value: _vm.encodeDateFields,\n                          callback: function($$v) {\n                            _vm.encodeDateFields = $$v\n                          },\n                          expression: \"encodeDateFields\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Select fields to drop (Excluding Target)\",\n                        \"label-for\": \"dropFields\",\n                        \"label-cols\": 3,\n                        horizontal: true\n                      }\n                    },\n                    [\n                      _c(\"b-form-select\", {\n                        attrs: {\n                          id: \"dropFields\",\n                          plain: true,\n                          multiple: true,\n                          options: _vm.fieldOptions\n                        },\n                        model: {\n                          value: _vm.dropFields,\n                          callback: function($$v) {\n                            _vm.dropFields = $$v\n                          },\n                          expression: \"dropFields\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Select field to predict\",\n                        \"label-for\": \"predictField\",\n                        \"label-cols\": 3,\n                        horizontal: true\n                      }\n                    },\n                    [\n                      _c(\"b-form-select\", {\n                        attrs: {\n                          id: \"predictField\",\n                          plain: true,\n                          options: _vm.fieldOptions,\n                          value: \"Please select\"\n                        },\n                        model: {\n                          value: _vm.predictField,\n                          callback: function($$v) {\n                            _vm.predictField = $$v\n                          },\n                          expression: \"predictField\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Select Machine Learning Model\",\n                        \"label-for\": \"model_select_train\",\n                        \"label-cols\": 10,\n                        horizontal: false\n                      }\n                    },\n                    [\n                      _c(\"b-form-radio-group\", {\n                        attrs: {\n                          id: \"model_select_train\",\n                          plain: true,\n                          options: [\n                            { text: \"Decission Tree \", value: \"DTR\" },\n                            { text: \"Extra Trees \", value: \"EXT\" },\n                            { text: \"Random Forrest \", value: \"RFR\" },\n                            { text: \"Support Vector (TPOT)\", value: \"SVR\" },\n                            { text: \"AutoML (TPOT) \", value: \"TPOT\" }\n                          ],\n                          checked: 2\n                        },\n                        model: {\n                          value: _vm.model_select_train,\n                          callback: function($$v) {\n                            _vm.model_select_train = $$v\n                          },\n                          expression: \"model_select_train\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _vm._v(\n                  \"\\n                    Encode Categorical Fields: \" +\n                    _vm._s(_vm.encodeCatFields) +\n                    \"\\n                \"\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _vm._v(\n                  \"\\n                    Encode Date Fields: \" +\n                    _vm._s(_vm.encodeDateFields) +\n                    \"\\n                \"\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _vm._v(\n                  \"\\n                    Drop Fields: \" +\n                    _vm._s(_vm.dropFields) +\n                    \"\\n                \"\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _vm._v(\n                  \"\\n                    Predict Field: \" +\n                    _vm._s(_vm.predictField) +\n                    \"\\n                \"\n                )\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { attrs: { slot: \"modal-footer\" }, slot: \"modal-footer\" },\n            [\n              _c(\n                \"b-button\",\n                {\n                  attrs: { type: \"submit\", size: \"sm\", variant: \"primary\" },\n                  on: { click: _vm.trainModel }\n                },\n                [\n                  _c(\"i\", { staticClass: \"fa fa-dot-circle-o\" }),\n                  _vm._v(\" Train Model\")\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}