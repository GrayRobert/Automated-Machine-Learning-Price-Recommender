{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/custom/TrainModel.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/custom/TrainModel.vue","mtime":1543353930769},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dropbox {\n    border: 20px;\n    border-top: 0;\n    border-style: solid;\n    border-color: rgb(243, 241, 241);\n    margin:30px;\n    background: rgba(255, 255, 255, 0.705);\n    color: dimgray;\n    padding: 10px 10px;\n    min-height: 200px; /* minimum height */\n    position: relative;\n    cursor: pointer;\n}\n\n.input-file {\n    opacity: 0; /* invisible but it's there! */\n    width: 100%;\n    height: 200px;\n    position: absolute;\n    cursor: pointer;\n}\n\n.dropbox:hover {\n    background: rgba(235, 235, 235, 0.562); /* when mouse over to the drop zone, change color */\n}\n\n.dropbox p {\n    font-size: 1.2em;\n    text-align: center;\n    padding: 50px 0;\n}\n\n.arrow-down {\n    width: 0; \n    height: 0;\n    left: 45%;\n    top:20%;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n\n    border-top: 20px solid rgb(231, 231, 231);\n    position: absolute;\n}\n.training-text {\n    margin-top:5px;\n    color:#20a8d8;\n    vertical-align: middle;\n    display: inline-block;\n}\n",{"version":3,"sources":["TrainModel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TrainModel.vue","sourceRoot":"src/views/custom","sourcesContent":["<template>\n    <b-card>\n          <b-row>\n            <b-col>\n            <form enctype=\"multipart/form-data\" novalidate>\n                <h2>Price Recommender Training</h2>\n                <h3 v-if=\"isSuccess\">Uploaded {{ uploadedFiles.length }} file(s) successfully.</h3>\n                <div class=\"dropbox\">\n                <input type=\"file\" :name=\"uploadFieldName\" :disabled=\"isSaving\" @change=\"filesChange($event.target.name, $event.target.files); fileCount = $event.target.files.length\"\n                    accept=\"text/csv\" class=\"input-file\">\n                    <div v-if=\"isInitial\">\n                        <div class=\"arrow-down\"></div>\n                        <p>Drop your CSV file here <br> or click to browse</p>\n                    </div>\n                    <p v-if=\"isSaving\">\n                    Uploading {{ fileCount }} files...\n                    </p>\n                    <div v-if=\"isSuccess\">\n                        <ul class=\"list-unstyled\">\n                        <li v-for=\"file in uploadedFiles\">\n                            {{ file }}\n                        </li>\n                        </ul>\n                    </div>\n                    <div v-if=\"isFailed\">\n                        <h2>Uploaded failed.</h2>\n                        <p>\n                        <a href=\"javascript:void(0)\" @click=\"reset()\">Try again</a>\n                        </p>\n                        <pre>{{ uploadError }}</pre>\n                    </div>\n                </div>\n            </form>\n            </b-col>\n          </b-row>\n          <div slot=\"footer\">\n            <b-row>\n                <b-col class=\"col-sm-2\">\n                    <b-button type=\"submit\" size=\"sm\" variant=\"primary\" v-on:click=\"preProcessModal = true\"><i class=\"fa fa-dot-circle-o\"></i> Train Model</b-button>\n                </b-col>\n                <b-col class=\"col-sm-10\">\n                    <b-row v-if=\"trainingInProgress\">\n                        <b-col class=\"col-sm-2\">\n                            <div>\n                                <atom-spinner\n                                :animation-duration=\"1000\"\n                                :size=\"30\"\n                                color=\"#20a8d8\"\n                                />\n                            </div>\n                        </b-col>\n                        <b-col class=\"col-sm-10\">\n                            <span class=\"training-text\">Training in progress...</span>\n                        </b-col>\n                    </b-row>\n                    <div id=\"accuracy\"><span v-if=\"accuracy !== null\">Accuracy: {{ accuracy.R2 }}</span></div>\n                </b-col>\n            </b-row>\n          </div>\n            <b-modal title=\"Model Training Options\" size=\"lg\" v-model=\"preProcessModal\" @ok=\"preProcessModal = false\" ok-title=\"Train\">\n                <b-row>\n                    <b-col>\n                        <b-form-group\n                            label=\"Select categroical fields to encode\"\n                            label-for=\"encodeCatFields\"\n                            :label-cols=\"3\"\n                            :horizontal=\"true\">\n                            <b-form-select id=\"encodeCatFields\"\n                                :plain=\"true\"\n                                :multiple=\"true\"\n                                :options=\"fieldOptions\"\n                                v-model=\"encodeCatFields\">\n                                </b-form-select>\n                        </b-form-group>\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        <b-form-group\n                            label=\"Select date fields to encode\"\n                            label-for=\"encodeDateFields\"\n                            :label-cols=\"3\"\n                            :horizontal=\"true\">\n                            <b-form-select id=\"encodeDateFields\"\n                                :plain=\"true\"\n                                :multiple=\"true\"\n                                :options=\"fieldOptions\"\n                                v-model=\"encodeDateFields\">\n                                </b-form-select>\n                        </b-form-group>\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        <b-form-group\n                            label=\"Select fields to drop (Excluding Target)\"\n                            label-for=\"dropFields\"\n                            :label-cols=\"3\"\n                            :horizontal=\"true\">\n                            <b-form-select id=\"dropFields\"\n                                :plain=\"true\"\n                                :multiple=\"true\"\n                                :options=\"fieldOptions\"\n                                v-model=\"dropFields\">\n                                </b-form-select>\n                        </b-form-group>\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        <b-form-group\n                            label=\"Select field to predict\"\n                            label-for=\"predictField\"\n                            :label-cols=\"3\"\n                            :horizontal=\"true\">\n                            <b-form-select id=\"predictField\"\n                            :plain=\"true\"\n                            :options=\"fieldOptions\"\n                            value=\"Please select\"\n                            v-model=\"predictField\">\n                            </b-form-select>\n                        </b-form-group>\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                    <b-form-group\n                        label=\"Select Machine Learning Model\"\n                        label-for=\"model_select_train\"\n                        :label-cols=\"10\"\n                        :horizontal=\"false\">\n                        <b-form-radio-group id=\"model_select_train\"\n                        :plain=\"true\"\n                        :options=\"[\n                            {text: 'Decission Tree ',value: 'DTR'},\n                            {text: 'Extra Trees ',value: 'EXT'},\n                            {text: 'Random Forrest ',value: 'RFR'},\n                            {text: 'Support Vector (TPOT)',value: 'SVR'},\n                            {text: 'AutoML (TPOT) ',value: 'TPOT'},\n                        ]\"\n                        :checked=\"2\" v-model=\"model_select_train\">\n                        </b-form-radio-group>\n                    </b-form-group>\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        Encode Categorical Fields: {{ encodeCatFields }}\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        Encode Date Fields: {{ encodeDateFields }}\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        Drop Fields: {{ dropFields }}\n                    </b-col>\n                </b-row>\n                <b-row>\n                    <b-col>\n                        Predict Field: {{ predictField }}\n                    </b-col>\n                </b-row>\n                <div slot=\"modal-footer\">\n                    <b-button type=\"submit\" size=\"sm\" variant=\"primary\" v-on:click=\"trainModel\"><i class=\"fa fa-dot-circle-o\"></i> Train Model</b-button>\n                </div>\n            </b-modal>\n        </b-card>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport { APIService } from '../../APIService'\nimport { AtomSpinner } from 'epic-spinners'\nimport Papa from 'papaparse'\n\nconst apiService = new APIService()\nconst STATUS_INITIAL = 0, STATUS_SAVING = 1, STATUS_SUCCESS = 2, STATUS_FAILED = 3;\n\n  export default {\n    components: {\n      AtomSpinner\n    },\n    data: function() {\n        return {\n            preProcessModal: false,\n            uploadedFiles: [],\n            accuracy: null,\n            uploadError: null,\n            currentStatus: null,\n            uploadFieldName: 'file',\n            trainingInProgress: false,\n            model_select_train: 'RFR',\n            modelFields: [],\n            fieldOptions: [],\n            encodeCatFields: [],\n            encodeDateFields: [],\n            dropFields: [],\n            predictField: null,\n            categroicals: [],\n            targetVariable: null\n        };\n    },\n    computed: {\n      isInitial() {\n        return this.currentStatus === STATUS_INITIAL;\n      },\n      isSaving() {\n        return this.currentStatus === STATUS_SAVING;\n      },\n      isSuccess() {\n        return this.currentStatus === STATUS_SUCCESS;\n      },\n      isFailed() {\n        return this.currentStatus === STATUS_FAILED;\n      }\n    },\n    methods: {\n        reset() {\n            // reset form to initial state\n            this.currentStatus = STATUS_INITIAL;\n            this.uploadedFiles = [];\n            this.uploadError = null;\n        },\n        save(formData) {\n            // upload data to the server\n            this.currentStatus = STATUS_SAVING;\n                apiService.uploadFile(formData)\n                    .then(response => {\n                    this.uploadedFiles = [].concat(response.FileName);\n                    this.currentStatus = STATUS_SUCCESS;\n                    })\n                    .catch(err => {\n                    this.uploadError = err.response;\n                    this.currentStatus = STATUS_FAILED;\n                    });\n        },\n        filesChange(fieldName, fileList) {\n            // handle file changes\n            const formData = new FormData();\n            let self = this;\n\n            const papaConfig = {\n                    header: true,\n                    dynamicTyping: true,\n                    preview: 10,\n                    complete: function (data) {\n                        self.modelFields = data.meta.fields\n                        self.modelFields.forEach(function(field) {\n                            self.fieldOptions.push({\n                                text: field,\n                                value: field\n                            })\n                        })\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                }\n\n\n            Papa.parse(fileList[0], papaConfig);\n\n            if (!fileList.length) return;\n\n            // append the files to FormData\n            formData.append(fieldName, fileList[0], fileList[0].name);\n\n\n            \n\n            // save it\n            this.save(formData);\n        },\n        trainModel(){\n            // Update our view\n            this.preProcessModal = false\n            this.trainingInProgress = true\n\n            // Build up our model training payload\n            const formData = new FormData();\n                if (this.encodeCatFields) {formData.append(\"encodecat\", this.encodeCatFields)}\n                if (this.encodeDateFields) {formData.append(\"encodedate\", this.encodeDateFields)}\n                if (this.dropFields) {formData.append(\"drop\", this.dropFields)}\n            formData.append(\"predict\", this.predictField)\n            formData.append(\"model\", this.model_select_train)\n            formData.append(\"variables\", this.modelFields)\n\n            // Send Request\n            apiService.trainModel(formData).then((data) => {\n                    this.accuracy = data\n                    this.trainingInProgress = false\n                    this.$parent.getModelTrainingHistory();\n                })\n        },\n    },\n    mounted() {\n        this.reset();\n    }\n  }\n</script>\n\n<style>\n    .dropbox {\n        border: 20px;\n        border-top: 0;\n        border-style: solid;\n        border-color: rgb(243, 241, 241);\n        margin:30px;\n        background: rgba(255, 255, 255, 0.705);\n        color: dimgray;\n        padding: 10px 10px;\n        min-height: 200px; /* minimum height */\n        position: relative;\n        cursor: pointer;\n    }\n\n    .input-file {\n        opacity: 0; /* invisible but it's there! */\n        width: 100%;\n        height: 200px;\n        position: absolute;\n        cursor: pointer;\n    }\n\n    .dropbox:hover {\n        background: rgba(235, 235, 235, 0.562); /* when mouse over to the drop zone, change color */\n    }\n\n    .dropbox p {\n        font-size: 1.2em;\n        text-align: center;\n        padding: 50px 0;\n    }\n\n    .arrow-down {\n        width: 0; \n        height: 0;\n        left: 45%;\n        top:20%;\n        border-left: 20px solid transparent;\n        border-right: 20px solid transparent;\n\n        border-top: 20px solid rgb(231, 231, 231);\n        position: absolute;\n    }\n    .training-text {\n        margin-top:5px;\n        color:#20a8d8;\n        vertical-align: middle;\n        display: inline-block;\n    }\n</style>"]}]}