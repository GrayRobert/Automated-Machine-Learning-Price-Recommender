{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/pages/ForgotPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/pages/ForgotPassword.vue","mtime":1544379948662},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {APIService} from '../../APIService'\nconst apiService = new APIService()\n\nexport default {  \n  name: 'ResetPassword',\n  data: function () {\n    return {\n      email: '',\n      showResetFailed: false,\n      errors: [],\n    }\n  },\n  methods: {\n    resetPassword() {\n      // Build up form data\n      const formData = new FormData();\n      formData.append(\"email\", this.email)\n\n      let self = this;\n\n      // Send Request\n      apiService.resetPassword(formData)\n        .then((data) => {\n          console.log(data)\n          self.errors = []\n          data.email.forEach(function(error) {\n              self.errors.push(error)\n          })\n        })\n      console.log(this.errors)\n      if (this.errors.lenght > 0) {\n        this.showResetFailed = true\n      }\n    },\n  },\n  watch: { \n\n  }\n}\n",{"version":3,"sources":["ForgotPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ForgotPassword.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n  <div class=\"app flex-row align-items-center\">\n    <div class=\"container\">\n      <b-row class=\"justify-content-center\">\n        <b-col md=\"8\">\n          <b-card-group>\n            <b-card no-body class=\"p-4\">\n              <b-card-body>\n                <b-form>\n                  <h2>Price Recommender</h2>\n                  <p class=\"text-muted\">Forgot Password</p>\n                  <b-input-group class=\"mb-3\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-user\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"text\" class=\"form-control\" placeholder=\"Email\" autocomplete=\"email\" v-model=\"email\" />\n                  </b-input-group>\n                  <b-row>\n                    <b-col>\n                      <b-button variant=\"primary\" class=\"px-4\" v-on:click=\"resetPassword\">Reset Password</b-button>\n                    </b-col>\n                  </b-row>\n                  <b-row>\n                    <b-col>\n                      &nbsp;\n                    </b-col>\n                  </b-row>\n                  <b-row v-if=\"showResetFailed\">\n                    <b-col>\n                      <div class=\"error\" v-for=\"(error, index) in errors\" v-bind:key=\"index\">{{ error }}</div>\n                    </b-col>\n                  </b-row>\n                </b-form>\n              </b-card-body>\n            </b-card>\n          </b-card-group>\n        </b-col>\n      </b-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '../../APIService'\nconst apiService = new APIService()\n\nexport default {  \n  name: 'ResetPassword',\n  data: function () {\n    return {\n      email: '',\n      showResetFailed: false,\n      errors: [],\n    }\n  },\n  methods: {\n    resetPassword() {\n      // Build up form data\n      const formData = new FormData();\n      formData.append(\"email\", this.email)\n\n      let self = this;\n\n      // Send Request\n      apiService.resetPassword(formData)\n        .then((data) => {\n          console.log(data)\n          self.errors = []\n          data.email.forEach(function(error) {\n              self.errors.push(error)\n          })\n        })\n      console.log(this.errors)\n      if (this.errors.lenght > 0) {\n        this.showResetFailed = true\n      }\n    },\n  },\n  watch: { \n\n  }\n}\n</script>\n\n<style>\n  .icon-user {\n    color:#666;\n    margin-bottom: 0px;\n  }\n  .error {\n    color:red;\n  }\n</style>\n"]}]}