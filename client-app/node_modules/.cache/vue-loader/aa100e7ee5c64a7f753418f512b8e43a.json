{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/Dashboard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/Dashboard.vue","mtime":1542577661589},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* IE fix */\n#card-chart-01, #card-chart-02 {\n  width: 100% !important;\n}\nhr.nice {\n  border-top: 1px dotted #8c8b8b;\n  border-bottom: 1px dotted #fff;\n}\n.predicting-text {\n      margin-top:5px;\n      color:#20a8d8;\n      vertical-align: middle;\n      display: inline-block;\n  }\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"animated fadeIn\">\n    <b-row>\n      <b-col>\n              <TrainModel />\n      </b-col>\n      <b-col>\n        <b-card>\n          <b-row>\n            <b-col sm=\"5\">\n              <h4 id=\"traffic\" class=\"card-title mb-0\">Predicted V Actual</h4>\n            </b-col>\n            <b-col sm=\"7\" class=\"d-none d-md-block\">\n            </b-col>\n          </b-row>\n          <b-row>\n            <img src=\"/img/charts/predictedvactual.png\" height=\"300\" style=\"margin:auto;\"/>\n          </b-row>\n          <div slot=\"footer\">\n            <b-row class=\"text-center\">\n                <span>Last Updated: </span>\n            </b-row>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n        <b-row>\n      <b-col>\n        <PredictModel :history=\"history\"/>\n      </b-col>\n      <b-col>\n        <b-card header=\"Model Training History\">\n          <b-table striped hover responsive=\"sm\" :items=\"history\" :fields=\"historyFields\" :current-page=\"currentPage\" :per-page=\"perPage\">\n            <template slot=\"actions\" slot-scope=\"cell\">\n              <b-btn size=\"sm\" v-if=\"cell.item.model_file\" @click.stop=\"deleteModel(cell.item.id)\">Delete</b-btn>\n            </template>\n          </b-table>\n          <nav>\n            <b-pagination :total-rows=\"getRowCount(history)\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\n          </nav>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport TrainModel from './custom/TrainModel'\nimport PredictModel from './custom/PredictModel'\nimport {APIService} from '../APIService'\nimport { AtomSpinner } from 'epic-spinners'\nimport moment from 'moment'\nimport numeral from 'numeral'\n\nconst apiService = new APIService();\n\nexport default {\n  name: 'dashboard',\n  components: {\n    TrainModel,\n    PredictModel,\n    AtomSpinner\n  },\n  data: function () {\n    return {\n      history: [],\n      historyFields: [\n        {key: 'id'},\n        {key: 'model_type'},\n        {key: 'dependent_variable'},\n        {\n          key: 'trained_date',\n          formatter: (value) => { return moment(value).format('MMM Do YYYY, h:mm:ss a') }\n        },\n        {key: 'accuracy_r2',\n          formatter: (value) => { return numeral(value).format('0.00%')}},\n        {key: 'actions'}\n      ],\n      currentPage: 1,\n      perPage: 8,\n      totalRows: 0\n    }\n  },\n  methods: {\n      getModelTrainingHistory(){\n      apiService.getModelTrainingHistory().then((data) => {\n              this.history = data;\n          })\n      \n      },\n      getRowCount (items) {\n        return items.length\n      },\n      deleteModel (modelID) {\n        console.log('Deleted model: ' + modelID)\n        apiService.deleteModel(modelID).then((data) => {\n              this.getModelTrainingHistory()\n          })\n      }\n  },\n  mounted () {\n    //this.getPrediction()\n    this.getModelTrainingHistory()\n  }\n}\n</script>\n\n<style>\n  /* IE fix */\n  #card-chart-01, #card-chart-02 {\n    width: 100% !important;\n  }\n  hr.nice {\n    border-top: 1px dotted #8c8b8b;\n    border-bottom: 1px dotted #fff;\n  }\n  .predicting-text {\n        margin-top:5px;\n        color:#20a8d8;\n        vertical-align: middle;\n        display: inline-block;\n    }\n</style>\n"]}]}