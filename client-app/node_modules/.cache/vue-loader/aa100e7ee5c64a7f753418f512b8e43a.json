{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/Dashboard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/Dashboard.vue","mtime":1544378618610},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* IE fix */\n#card-chart-01, #card-chart-02 {\n  width: 100% !important;\n}\nhr.nice {\n  border-top: 1px dotted #8c8b8b;\n  border-bottom: 1px dotted #fff;\n}\nh1.nice { \n  color: green; \n  font-family: 'Helvetica Neue', sans-serif; \n  font-size: 175px; \n  font-weight: bold; \n  letter-spacing: -1px; \n  line-height: 1; \n  text-align: center; \n  padding: 50px 0;\n  }\n.predicting-text {\n      margin-top:5px;\n      color:#20a8d8;\n      vertical-align: middle;\n      display: inline-block;\n  }\n  .center {\n      margin: auto;\n      width: 50%;\n  }\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"animated fadeIn\">\n    <b-row>\n      <b-col>\n        <b-card-group deck>\n          <train-model />\n          <b-card>\n            <b-row>\n              <b-col sm=\"5\">\n                <h2>Predicted V Actual</h2>\n              </b-col>\n              <b-col sm=\"7\" class=\"d-none d-md-block\">\n              </b-col>\n            </b-row>\n            <b-row>\n              <b-col>\n                <scatter-plot :model=\"currentModel\" />\n              </b-col>\n            </b-row>\n            <div slot=\"footer\">\n              <b-row class=\"text-center\">\n                  <span>Based on Model: ID:{{currentModel.id}} | Type:{{currentModel.model_type}}</span>\n              </b-row>\n            </div>\n          </b-card>\n        </b-card-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        &nbsp;\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-card-group deck>\n          <predict-model :history=\"history\" :model=\"currentModel\" v-on:changeSelectedModelId=\"changeSelectedModelId($event)\"/>\n          <b-card header=\"Model Training History\">\n            <b-table striped hover responsive=\"sm\" :items=\"history\" :fields=\"historyFields\" :current-page=\"currentPage\" :per-page=\"perPage\">\n              <template slot=\"actions\" slot-scope=\"cell\">\n                <b-btn size=\"sm\" v-if=\"cell.item.model_file\" @click.stop=\"deleteModel(cell.item.id)\">Delete</b-btn>\n              </template>\n            </b-table>\n            <nav>\n              <b-pagination :total-rows=\"getRowCount(history)\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\n            </nav>\n          </b-card>\n        </b-card-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        &nbsp;\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <time-series :model=\"currentModel\" />\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport TrainModel from './custom/TrainModel'\nimport PredictModel from './custom/PredictModel'\nimport ScatterPlot from './custom/ScatterPlot'\nimport TimeSeries from './custom/TimeSeries'\nimport {APIService} from '../APIService'\nimport { AtomSpinner } from 'epic-spinners'\nimport moment from 'moment'\nimport numeral from 'numeral'\n\nconst apiService = new APIService();\n\nexport default {\n  name: 'dashboard',\n  components: {\n    TrainModel,\n    PredictModel,\n    AtomSpinner,\n    ScatterPlot,\n    TimeSeries\n  },\n  data: function () {\n    return {\n      history: [],\n      historyFields: [\n        {key: 'id'},\n        {key: 'model_type'},\n        {key: 'dependent_variable'},\n        {\n          key: 'trained_date',\n          formatter: (value) => { return moment(value).format('MMM Do YYYY, h:mm:ss a') }\n        },\n        {key: 'accuracy_r2',\n          formatter: (value) => { return numeral(value).format('0.00%')}},\n        {key: 'actions'}\n      ],\n      currentPage: 1,\n      perPage: 5,\n      totalRows: 0,\n      currentModel: {},\n      isAuthenticated: false,\n      token: '',\n      username: '',\n    }\n  },\n  computed: {\n\n  },\n  filters: {\n    percentageFormat: function(value) {\n      return numeral(value).format('0.00%')\n    },\n    percentageFormatRound: function(value) {\n      return numeral(value).format('0%')\n    },\n    dateFormat: function(value) {\n      return moment(value).format('MMM Do YYYY, h:mm:ss a')\n    }\n  },\n  methods: {\n      getModelTrainingHistory(){\n      apiService.getModelTrainingHistory().then((data) => {\n              this.history = data;\n              this.currentModel = _.last(_.orderBy(data, 'accuracy_r2', 'asc')) || ''\n          })\n      \n      },\n      getRowCount (items) {\n        return items.length\n      },\n      deleteModel (modelID) {\n        console.log('Deleted model: ' + modelID)\n        apiService.deleteModel(modelID).then((data) => {\n              this.getModelTrainingHistory()\n          })\n      },\n      changeSelectedModelId (modelId) {\n        this.currentModel = _.find(this.history, { 'id': modelId })\n      }\n  },\n  mounted () {\n    //this.getPrediction()\n    this.token = this.$cookies.get(\"token\")\n    this.username = this.$cookies.get(\"username\")\n    if(!this.token) {\n          this.$router.push('/pages/login')\n    } else {\n      this.isAuthenticated = true;\n    }\n    this.getModelTrainingHistory()\n  },\n  watch: { \n            'history': function() {\n                console.log('Watched history')\n            },\n        }\n}\n</script>\n\n<style>\n  /* IE fix */\n  #card-chart-01, #card-chart-02 {\n    width: 100% !important;\n  }\n  hr.nice {\n    border-top: 1px dotted #8c8b8b;\n    border-bottom: 1px dotted #fff;\n  }\n  h1.nice { \n    color: green; \n    font-family: 'Helvetica Neue', sans-serif; \n    font-size: 175px; \n    font-weight: bold; \n    letter-spacing: -1px; \n    line-height: 1; \n    text-align: center; \n    padding: 50px 0;\n    }\n  .predicting-text {\n        margin-top:5px;\n        color:#20a8d8;\n        vertical-align: middle;\n        display: inline-block;\n    }\n    .center {\n        margin: auto;\n        width: 50%;\n    }\n</style>\n"]}]}