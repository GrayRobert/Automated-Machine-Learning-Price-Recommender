{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/pages/Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/pages/Login.vue","mtime":1544378546907},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.icon-user {\n  color:#666;\n  margin-bottom: 0px;\n}\n.error {\n  color:red;\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n  <div class=\"app flex-row align-items-center\">\n    <div class=\"container\">\n      <b-row class=\"justify-content-center\">\n        <b-col md=\"8\">\n          <b-card-group>\n            <b-card no-body class=\"p-4\">\n              <b-card-body>\n                <b-form>\n                  <h2>Price Recommender</h2>\n                  <p class=\"text-muted\">Sign In to your account</p>\n                  <b-input-group class=\"mb-3\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-user\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"text\" class=\"form-control\" placeholder=\"Username\" autocomplete=\"username email\" v-model=\"username\" />\n                  </b-input-group>\n                  <b-input-group class=\"mb-4\">\n                    <b-input-group-prepend><b-input-group-text><i class=\"icon-lock\"></i></b-input-group-text></b-input-group-prepend>\n                    <b-form-input type=\"password\" class=\"form-control\" placeholder=\"Password\" autocomplete=\"current-password\" v-model=\"password\" />\n                  </b-input-group>\n                  <b-row>\n                    <b-col cols=\"6\">\n                      <b-button variant=\"primary\" class=\"px-4\" v-on:click=\"login\">Login</b-button>\n                    </b-col>\n                    <b-col cols=\"6\" class=\"text-right\">\n                      <b-button variant=\"link\" class=\"px-0\" v-on:click=\"forgotPassword\">Forgot password?</b-button>\n                    </b-col>\n                  </b-row>\n                  <b-row>\n                    <b-col>\n                      &nbsp;\n                    </b-col>\n                  </b-row>\n                  <b-row v-if=\"showLoginFailed\">\n                    <b-col>\n                      <div class=\"error\" v-for=\"(error, index) in errors\" v-bind:key=\"index\">{{ error }}</div>\n                    </b-col>\n                  </b-row>\n                </b-form>\n              </b-card-body>\n            </b-card>\n          </b-card-group>\n        </b-col>\n      </b-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {APIService} from '../../APIService'\nconst apiService = new APIService()\n\nexport default {  \n  name: 'Login',\n  data: function () {\n    return {\n      username: '',\n      password: '',\n      isAuthenticated: false,\n      token: '',\n      showLoginFailed: false,\n      errors: [],\n    }\n  },\n  methods: {\n    login() {\n      // Build up form data\n      const formData = new FormData();\n      formData.append(\"username\", this.username)\n      formData.append(\"password\", this.password)\n\n      let self = this;\n\n      // Send Request\n      apiService.loginUser(formData)\n        .then((data) => {\n          console.log(data)\n          if(data.key) {\n            self.isAuthenticated = true\n            self.setCookie(data.key)\n          } else {\n            self.showLoginFailed = true\n            self.errors = []\n            data.non_field_errors.forEach(function(error) {\n                self.errors.push(error)\n            })\n          }\n        })\n    },\n    forgotPassword() {\n\n    },\n    setCookie(token) {\n      const date = new Date\n      date.setDate(date.getDate() + 1)\n      this.$cookies.set(\"token\",token, date)\n      this.$cookies.set(\"user\",this.username, date)\n      this.getCookie()\n    },\n    getCookie() {\n      this.token = this.$cookies.get(\"token\")\n    },\n  },\n  watch: { \n    'isAuthenticated': function() {\n        if(this.isAuthenticated) {\n          this.$router.push('/#/dashboard')\n        } \n    },\n  }\n}\n</script>\n\n<style>\n  .icon-user {\n    color:#666;\n    margin-bottom: 0px;\n  }\n  .error {\n    color:red;\n  }\n</style>\n"]}]}