{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/babel-loader/lib/index.js!/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/custom/TimeSeries.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/custom/TimeSeries.vue","mtime":1543358027633},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport { APIService } from '../../APIService';\nimport _ from 'lodash';\nvar apiService = new APIService();\nimport moment from 'moment';\nexport default {\n  data: function data() {\n    return {};\n  },\n  props: ['model'],\n  methods: {\n    getWeeks: function getWeeks() {\n      var start = moment('2018-01-01'),\n          end = moment('2018-12-30'),\n          day = 6; // Saturday\n\n      var result = [];\n      var current = start.clone();\n\n      while (current.day(7 + day).isBefore(end)) {\n        result.push(current.clone());\n      }\n\n      console.log(result.map(function (m) {\n        return m.format('YYYY-MM-DD');\n      }));\n    }\n  },\n  watch: {\n    'model': function model() {\n      console.log(\"model watched\");\n    }\n  },\n  mounted: function mounted() {\n    this.getWeeks();\n  }\n};",{"version":3,"sources":["TimeSeries.vue"],"names":[],"mappings":";;;;;;AAOA,SAAA,UAAA,QAAA,kBAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,IAAA,aAAA,IAAA,UAAA,EAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,QAAA,gBAAA;AACA,WAAA,EAAA;AAGA,GALA;AAMA,SAAA,CAAA,OAAA,CANA;AAOA,WAAA;AACA,YADA,sBACA;AACA,UAAA,QAAA,OAAA,YAAA,CAAA;AAAA,UACA,MAAA,OAAA,YAAA,CADA;AAAA,UAEA,MAAA,CAFA,CADA,CAGA;;AAEA,UAAA,SAAA,EAAA;AACA,UAAA,UAAA,MAAA,KAAA,EAAA;;AAEA,aAAA,QAAA,GAAA,CAAA,IAAA,GAAA,EAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,QAAA,KAAA,EAAA;AACA;;AAEA,cAAA,GAAA,CAAA,OAAA,GAAA,CAAA;AAAA,eAAA,EAAA,MAAA,CAAA,YAAA,CAAA;AAAA,OAAA,CAAA;AACA;AAdA,GAPA;AAuBA,SAAA;AACA,aAAA,iBAAA;AACA,cAAA,GAAA,CAAA,eAAA;AACA;AAHA,GAvBA;AA4BA,SA5BA,qBA4BA;AACA,SAAA,QAAA;AACA;AA9BA,CAAA","sourcesContent":["<template>\n    <b-card header=\"Model Prediction Time Series\">\n        \n    </b-card>\n</template>\n\n<script>\nimport {APIService} from '../../APIService'\nimport _ from 'lodash'\nconst apiService = new APIService();\nimport moment from 'moment'\n\nexport default {\n    data: function() {\n        return {\n\n        }\n    },\n    props: ['model'],\n    methods: {\n        getWeeks() {\n            const start = moment('2018-01-01'),\n                end   = moment('2018-12-30'),\n                day   = 6; // Saturday\n\n            let result = [];\n            let current = start.clone();\n\n            while (current.day(7 + day).isBefore(end)) {\n            result.push(current.clone());\n            }\n\n            console.log(result.map(m => m.format('YYYY-MM-DD')));\n        }\n    },\n    watch: { \n        'model': function() {\n        console.log(\"model watched\")\n        },\n    },\n    mounted() {\n        this.getWeeks()\n    }\n\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views/custom"}]}