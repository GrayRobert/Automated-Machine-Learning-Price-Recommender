{"remainingRequest":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/babel-loader/lib/index.js!/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robertgray/sandbox/price-recommender/client-app/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robertgray/sandbox/price-recommender/client-app/src/views/Dashboard.vue","mtime":1542577661589},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/cache-loader/dist/cjs.js","mtime":1539889924615},{"path":"/Users/robertgray/sandbox/price-recommender/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TrainModel from './custom/TrainModel';\nimport PredictModel from './custom/PredictModel';\nimport { APIService } from '../APIService';\nimport { AtomSpinner } from 'epic-spinners';\nimport moment from 'moment';\nimport numeral from 'numeral';\nvar apiService = new APIService();\nexport default {\n  name: 'dashboard',\n  components: {\n    TrainModel: TrainModel,\n    PredictModel: PredictModel,\n    AtomSpinner: AtomSpinner\n  },\n  data: function data() {\n    return {\n      history: [],\n      historyFields: [{\n        key: 'id'\n      }, {\n        key: 'model_type'\n      }, {\n        key: 'dependent_variable'\n      }, {\n        key: 'trained_date',\n        formatter: function formatter(value) {\n          return moment(value).format('MMM Do YYYY, h:mm:ss a');\n        }\n      }, {\n        key: 'accuracy_r2',\n        formatter: function formatter(value) {\n          return numeral(value).format('0.00%');\n        }\n      }, {\n        key: 'actions'\n      }],\n      currentPage: 1,\n      perPage: 8,\n      totalRows: 0\n    };\n  },\n  methods: {\n    getModelTrainingHistory: function getModelTrainingHistory() {\n      var _this = this;\n\n      apiService.getModelTrainingHistory().then(function (data) {\n        _this.history = data;\n      });\n    },\n    getRowCount: function getRowCount(items) {\n      return items.length;\n    },\n    deleteModel: function deleteModel(modelID) {\n      var _this2 = this;\n\n      console.log('Deleted model: ' + modelID);\n      apiService.deleteModel(modelID).then(function (data) {\n        _this2.getModelTrainingHistory();\n      });\n    }\n  },\n  mounted: function mounted() {\n    //this.getPrediction()\n    this.getModelTrainingHistory();\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,UAAA,MAAA,qBAAA;AACA,OAAA,YAAA,MAAA,uBAAA;AACA,SAAA,UAAA,QAAA,eAAA;AACA,SAAA,WAAA,QAAA,eAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,OAAA,MAAA,SAAA;AAEA,IAAA,aAAA,IAAA,UAAA,EAAA;AAEA,eAAA;AACA,QAAA,WADA;AAEA,cAAA;AACA,0BADA;AAEA,8BAFA;AAGA;AAHA,GAFA;AAOA,QAAA,gBAAA;AACA,WAAA;AACA,eAAA,EADA;AAEA,qBAAA,CACA;AAAA,aAAA;AAAA,OADA,EAEA;AAAA,aAAA;AAAA,OAFA,EAGA;AAAA,aAAA;AAAA,OAHA,EAIA;AACA,aAAA,cADA;AAEA,mBAAA,mBAAA,KAAA,EAAA;AAAA,iBAAA,OAAA,KAAA,EAAA,MAAA,CAAA,wBAAA,CAAA;AAAA;AAFA,OAJA,EAQA;AAAA,aAAA,aAAA;AACA,mBAAA,mBAAA,KAAA,EAAA;AAAA,iBAAA,QAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA;AAAA;AADA,OARA,EAUA;AAAA,aAAA;AAAA,OAVA,CAFA;AAcA,mBAAA,CAdA;AAeA,eAAA,CAfA;AAgBA,iBAAA;AAhBA,KAAA;AAkBA,GA1BA;AA2BA,WAAA;AACA,2BADA,qCACA;AAAA;;AACA,iBAAA,uBAAA,GAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,OAAA,GAAA,IAAA;AACA,OAFA;AAIA,KANA;AAOA,eAPA,uBAOA,KAPA,EAOA;AACA,aAAA,MAAA,MAAA;AACA,KATA;AAUA,eAVA,uBAUA,OAVA,EAUA;AAAA;;AACA,cAAA,GAAA,CAAA,oBAAA,OAAA;AACA,iBAAA,WAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,uBAAA;AACA,OAFA;AAGA;AAfA,GA3BA;AA4CA,SA5CA,qBA4CA;AACA;AACA,SAAA,uBAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"animated fadeIn\">\n    <b-row>\n      <b-col>\n              <TrainModel />\n      </b-col>\n      <b-col>\n        <b-card>\n          <b-row>\n            <b-col sm=\"5\">\n              <h4 id=\"traffic\" class=\"card-title mb-0\">Predicted V Actual</h4>\n            </b-col>\n            <b-col sm=\"7\" class=\"d-none d-md-block\">\n            </b-col>\n          </b-row>\n          <b-row>\n            <img src=\"/img/charts/predictedvactual.png\" height=\"300\" style=\"margin:auto;\"/>\n          </b-row>\n          <div slot=\"footer\">\n            <b-row class=\"text-center\">\n                <span>Last Updated: </span>\n            </b-row>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n        <b-row>\n      <b-col>\n        <PredictModel :history=\"history\"/>\n      </b-col>\n      <b-col>\n        <b-card header=\"Model Training History\">\n          <b-table striped hover responsive=\"sm\" :items=\"history\" :fields=\"historyFields\" :current-page=\"currentPage\" :per-page=\"perPage\">\n            <template slot=\"actions\" slot-scope=\"cell\">\n              <b-btn size=\"sm\" v-if=\"cell.item.model_file\" @click.stop=\"deleteModel(cell.item.id)\">Delete</b-btn>\n            </template>\n          </b-table>\n          <nav>\n            <b-pagination :total-rows=\"getRowCount(history)\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\n          </nav>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport TrainModel from './custom/TrainModel'\nimport PredictModel from './custom/PredictModel'\nimport {APIService} from '../APIService'\nimport { AtomSpinner } from 'epic-spinners'\nimport moment from 'moment'\nimport numeral from 'numeral'\n\nconst apiService = new APIService();\n\nexport default {\n  name: 'dashboard',\n  components: {\n    TrainModel,\n    PredictModel,\n    AtomSpinner\n  },\n  data: function () {\n    return {\n      history: [],\n      historyFields: [\n        {key: 'id'},\n        {key: 'model_type'},\n        {key: 'dependent_variable'},\n        {\n          key: 'trained_date',\n          formatter: (value) => { return moment(value).format('MMM Do YYYY, h:mm:ss a') }\n        },\n        {key: 'accuracy_r2',\n          formatter: (value) => { return numeral(value).format('0.00%')}},\n        {key: 'actions'}\n      ],\n      currentPage: 1,\n      perPage: 8,\n      totalRows: 0\n    }\n  },\n  methods: {\n      getModelTrainingHistory(){\n      apiService.getModelTrainingHistory().then((data) => {\n              this.history = data;\n          })\n      \n      },\n      getRowCount (items) {\n        return items.length\n      },\n      deleteModel (modelID) {\n        console.log('Deleted model: ' + modelID)\n        apiService.deleteModel(modelID).then((data) => {\n              this.getModelTrainingHistory()\n          })\n      }\n  },\n  mounted () {\n    //this.getPrediction()\n    this.getModelTrainingHistory()\n  }\n}\n</script>\n\n<style>\n  /* IE fix */\n  #card-chart-01, #card-chart-02 {\n    width: 100% !important;\n  }\n  hr.nice {\n    border-top: 1px dotted #8c8b8b;\n    border-bottom: 1px dotted #fff;\n  }\n  .predicting-text {\n        margin-top:5px;\n        color:#20a8d8;\n        vertical-align: middle;\n        display: inline-block;\n    }\n</style>\n"],"sourceRoot":"src/views"}]}